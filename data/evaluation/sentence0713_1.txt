(s / say-01
	:ARG0 (r / reasons
		:nmod (l3 / little
			:poss (t3 / tippler
				:mod (p / poor)
				:poss (m / my)
				:case (l / like))))
	:ARG0 (p2 / prince
		:mod (l2 / little))
	:ARG0 (m2 / man
		:det (t / this))
	:time (h / himself
		:case (t2 / to)))