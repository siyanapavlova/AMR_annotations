include "core_roles.grs"
include "non_core_roles.grs"

strat simplest {
  Seq (
    Iter (pred_nsubj_obj),  % identify a predicate and its arguments. 

    )
  }


strat simpler {
  Seq (
    Iter (pred_nsubj_obj), % identify a predicate and its arguments. 
    Iter (noun_amod),  % identify nouns with an amod. Add the :mod role. 
    
    )
  }

strat prepare {
  Seq (
    Iter(add_root_concept), %add a concept to the root
    Iter(remove_root_rel), %delete the root relation
    %Iter(remove_punct_safe),
  )
}

strat clean {
  Seq (
    Iter(remove_punct),
    Iter(remove_det),
  )
}

strat prepare_predicates {
  Seq (
    Iter(add_root_concept),
    Onf(add_concept),
    Iter(prepare_concept),
    Iter(prepare_verb_arg0),
    Iter(prepare_verb_arg1),
    Iter(prepare_verb_arg2),
    Iter(prepare_verb_arg3),
    Iter(prepare_verb_arg4),
    Iter(prepare_verb_arg5),
    Iter(prepare_verb_arg6),
    Iter(prepare_verb_arg7),
    Iter(prepare_verb_arg8),
    Iter(prepare_verb_arg9),
  )
}

strat test_new_lex {
  Seq (
    prepare_predicates,
    Iter(pred_nsubj_obj),
    Iter(pred_nsubj_new_lex),
    Iter (nmod),
    clean,
    Iter(remove_root_rel), %delete the root relation
  )
}

strat simple {
  Seq (
	Iter (remove_root_rel), % delete root relation, which is not necessary 
	Onf (add_concept), % add an empty concept to every node, to have consistency across the board
    Iter (pred_nsubj_obj),  % identify a predicate and its arguments. 
  	Iter (remove_aux_pass), %may be removed later, this is mainly for testing; remove aux:pass relation when the predicate has an nsubj:pass relation too
	Iter (pred_nsubjpass_obj),
	Iter (pred_nsubjpass),
    Iter (pred_obj),
    Iter (pred_nsubj),
    Iter (ccomp_verbadv_notcop), 
	Iter (advcl_manner),
  	Iter (obl_nosubtag_temporal), 	
  	Iter (obl_nosubtag_locational), 
	Iter (obl_npmod),
	Iter (obl_agent), 
	Iter (verb_nominal_nummod_nsubj), 
  	Iter (verb_nominal_nummod_obj), 
	Iter (add_doerARG0),
	Iter (add_doerARG1),
	Iter (add_doerARG2),
	Iter (add_doerARG3),
	Iter (add_patientARG0),
	Iter (add_patientARG1),
	Iter (add_patientARG2),
	Iter (add_patientARG3),
  	Iter (remove_det), 
	Iter (remove_punct),
  	Iter (nmod),

    %Iter (noun_amod),  % identify nouns with an amod. Add the :mod role. 
    %Iter (iobj_nom_lex), % delete punctuation
  	%Iter (iobj_nom_notlex), % identify temporal or locational ARG2 roles
  	%Iter (det_as_all), 
  	%Iter (det_as_pers_pron),
  	%Iter (cc_to_op_morethan2),
  	%Iter (cc_to_op), 
  	%Iter (compound_find_join), 
  	%Iter (compoundpart_find_join), 
  	%Iter (advmod_lemmapred_polarity), 
	%Iter (remove_root_rel), %delete root relation
    %Pick (Iter (add_concept)),

    )
  }
