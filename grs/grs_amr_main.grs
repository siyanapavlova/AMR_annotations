include "core_roles.grs"
include "non_core_roles.grs"
include "remove_punct_safe.grs"
include "cc_to_op_redundancy.grs"

strat simplest {
  Seq (
    Iter (pred_nsubj_obj),  % identify a predicate and its arguments. 

    )
  }


strat simpler {
  Seq (
    Iter (pred_nsubj_obj), % identify a predicate and its arguments. 
    Iter (noun_amod),  % identify nouns with an amod. Add the :mod role. 
    
    )
  }

strat prepare {
  Seq (
    Iter(add_root_concept), %add a concept to the root
    Iter(remove_root_rel), %delete the root relation
  )
}

strat remove_punct_safe_strat {
  Seq (
    Iter(remove_punct_safe_nsubj),
    Iter(remove_punct_safe_obj),
    Iter(remove_punct_safe_iobj),
    Iter(remove_punct_safe_obl),
    Iter(remove_punct_safe_vocative),
    Iter(remove_punct_safe_expl),
    Iter(remove_punct_safe_dislocated),
    Iter(remove_punct_safe_nmod),
    Iter(remove_punct_safe_appos),
    Iter(remove_punct_safe_nummod),
    Iter(remove_punct_safe_csubj),
    Iter(remove_punct_safe_ccomp),
    Iter(remove_punct_safe_xcomp),
    Iter(remove_punct_safe_advcl),
    Iter(remove_punct_safe_acl),
    Iter(remove_punct_safe_advmod),
    Iter(remove_punct_safe_discourse),
    Iter(remove_punct_safe_amod),
    Iter(remove_punct_safe_aux),
    Iter(remove_punct_safe_cop),
    Iter(remove_punct_safe_mark),
    Iter(remove_punct_safe_det),
    Iter(remove_punct_safe_clf),
    Iter(remove_punct_safe_case),
    Iter(remove_punct_safe_conj),
    Iter(remove_punct_safe_cc),
    Iter(remove_punct_safe_fixed),
    Iter(remove_punct_safe_flat),
    Iter(remove_punct_safe_compound),
    Iter(remove_punct_safe_list),
    Iter(remove_punct_safe_parataxis),
    Iter(remove_punct_safe_orphan),
    Iter(remove_punct_safe_goeswith),
    Iter(remove_punct_safe_reparandum),
    Iter(remove_punct_safe_dep),
  )
}

strat cc_to_op{
  Seq (
    Iter(cc_to_op_nsubj),
    Iter(cc_to_op_obj),
    Iter(cc_to_op_obl),
    Iter(cc_to_op_ccomp),
    Iter(cc_to_op_xcomp),
    Iter(cc_to_op_advcl),
    Iter(cc_to_op_amod),
    Iter(cc_to_op_appos),
    Iter(cc_to_op_acl),
    Iter(cc_to_op_compound),
    Iter(cc_to_op_parataxis),
  )
}

strat clean {
  Seq (
    %Iter(remove_punct_safe),
    Iter(remove_punct),
    Iter(remove_det),
    Iter(remove_cop),
    Iter(remove_case),
  )
}

strat prepare_predicates {
  Seq (
    Iter(add_root_concept),
    Onf(add_concept),
    Iter(prepare_concept),
    Iter(prepare_verb_arg),
  )
}

strat non_core_new_lex{
  Seq(
    Iter(compound_to_mod_for_nouns),

    Iter(verb_nominal_nummod_nsubj),
    Iter(verb_nominal_nummod_obj),
    Iter(advcl_manner),


    Iter(obl_npmod_to_obl),
    Iter(acl_relcl_to_acl),
    Iter(nsubj_pass_to_nsubj),
    Iter(compound_part_to_compound),
    Iter(det_predet_to_det),
    Iter(cc_preconj_to_cc),
    Iter(aux_pass_to_aux),
    Iter(nmod_npmod_to_nmod),

    %Iter(compound_find_join),
    %Iter(compoundpart_find_join),

    Iter(obl_nosubtag_temporal),
    Iter(obl_nosubtag_locational),
  )
}

strat add_conc {
  Seq (
    Iter(add_root_concept),
    Onf(add_concept),
  )
}

strat test_new_lex {
  Seq (
    %clean,
    remove_punct_safe_strat,
    prepare_predicates,
    Iter(det_as_pers_pron),
    Iter(det_as_all),
    Iter (nmod),

    %Iter(pred_nsubj_obj_ccomp_arg0_arg1_arg2),
    %Iter(pred_nsubj_ccomp_arg0_arg1),
    %Iter(pred_nsubj_ccomp_arg0_arg2),
    
    Iter(pred_nsubj_obj_obl_case),
    Iter(pred_nsubj_obj_iobj),
    Iter(pred_nsubj_obj),

    %Iter(ccomp_verbadv_notcop),

    Iter(pred_nsubj_new_lex),
    Iter(pred_obj_arg1),
    Iter(pred_obj_arg2),

    Iter(remove_aux_pass),
    Iter(pred_nsubjpass_obj),
    Iter(pred_nsubjpass),


    Iter(noun_amod),

    Iter(remove_extra_cc_grandchildren),
    Iter(cc_to_op_morethan2),
    Iter(cc_to_op),
    %Iter(only_one_cc),

    Iter(advmod_as_not_to_polarity),
    Iter(without_to_polarity),

    non_core_new_lex,

    clean,
    Iter(remove_root_rel), %delete the root relation
  )
}

strat simple {
  Seq (
	Iter (remove_root_rel), % delete root relation, which is not necessary 
	Onf (add_concept), % add an empty concept to every node, to have consistency across the board
    Iter (pred_nsubj_obj),  % identify a predicate and its arguments. 
  	Iter (remove_aux_pass), %may be removed later, this is mainly for testing; remove aux:pass relation when the predicate has an nsubj:pass relation too
	Iter (pred_nsubjpass_obj),
	Iter (pred_nsubjpass),
    Iter (pred_obj),
    Iter (pred_nsubj),
    Iter (ccomp_verbadv_notcop), 
	Iter (advcl_manner),
  	Iter (obl_nosubtag_temporal), 	
  	Iter (obl_nosubtag_locational), 
	Iter (obl_npmod),
	Iter (obl_agent), 
	Iter (verb_nominal_nummod_nsubj), 
  	Iter (verb_nominal_nummod_obj), 
	Iter (add_doerARG0),
	Iter (add_doerARG1),
	Iter (add_doerARG2),
	Iter (add_doerARG3),
	Iter (add_patientARG0),
	Iter (add_patientARG1),
	Iter (add_patientARG2),
	Iter (add_patientARG3),
  	Iter (remove_det), 
	Iter (remove_punct),
  	Iter (nmod),

    %Iter (noun_amod),  % identify nouns with an amod. Add the :mod role. 
    %Iter (iobj_nom_lex), % delete punctuation
  	%Iter (iobj_nom_notlex), % identify temporal or locational ARG2 roles
  	%Iter (det_as_all), 
  	%Iter (det_as_pers_pron),
  	%Iter (cc_to_op_morethan2),
  	%Iter (cc_to_op), 
  	%Iter (compound_find_join), 
  	%Iter (compoundpart_find_join), 
  	%Iter (advmod_lemmapred_polarity), 
	%Iter (remove_root_rel), %delete root relation
    %Pick (Iter (add_concept)),

    )
  }
